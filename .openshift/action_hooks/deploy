#!/bin/bash
# This deploy hook gets executed after dependencies are resolved and the
# build hook has been run but before the application has been started back
# up again.  This script gets executed directly, so it could be python, php,
# ruby, etc.

export PATH=${PATH}:${OPENSHIFT_REPO_DIR}misc/drush
PUBLIC_FILES_DIR=${OPENSHIFT_DATA_DIR}sites/default
PRIVATE_FILES_DIR=${OPENSHIFT_DATA_DIR}sites/default-private

chmod 777 ${OPENSHIFT_REPO_DIR}php/sites/default

if [ ! -f ${OPENSHIFT_DATA_DIR}.initialised ]; then
    
  drush si --yes \
    --root=${OPENSHIFT_REPO_DIR}php \
    --php=/usr/bin/php \
    --db-url=${OPENSHIFT_DB_URL}${OPENSHIFT_APP_NAME} \
    --db-su=$OPENSHIFT_DB_USERNAME \
    --db-su-pw=$OPENSHIFT_DB_PASSWORD \
    --account-mail=admin@netsrv-consulting.com \
    --account-name=admin \
    --db-prefix="drupal_" \
    --site-mail=enquires@nesrv-consulting.com \
    --clean-url=0 \
    --site-name="Drupal On OpenShift"

  mkdir -p ${PRIVATE_FILES_DIR}
  chmod 755 ${OPENSHIFT_REPO_DIR}php/sites/default

  drush vset \
    --yes \
    --root=${OPENSHIFT_REPO_DIR}php \
    file_private_path $PRIVATE_FILES_DIR

  mv ${OPENSHIFT_REPO_DIR}php/sites/default/files $PUBLIC_FILES_DIR
  mv ${OPENSHIFT_REPO_DIR}php/sites/default/settings.php ${OPENSHIFT_DATA_DIR}sites/default-settings.php
  ln -s $PUBLIC_FILES_DIR ${OPENSHIFT_REPO_DIR}php/sites/default/files
  ln -s ${OPENSHIFT_DATA_DIR}sites/default-settings.php ${OPENSHIFT_REPO_DIR}php/sites/default/settings.php
  touch ${OPENSHIFT_DATA_DIR}.initialised
else
  # Update an existing site
  ln -s $PUBLIC_FILES_DIR ${OPENSHIFT_REPO_DIR}php/sites/default/files
  ln -s ${OPENSHIFT_DATA_DIR}sites/default-settings.php ${OPENSHIFT_REPO_DIR}php/sites/default/settings.php
  drush cc all --root=${OPENSHIFT_REPO_DIR}php
  drush updatedb --root=${OPENSHIFT_REPO_DIR}php
fi

cp -fR ${OPENSHIFT_REPO_DIR}misc/private-files/* $PRIVATE_FILES_DIR
cp -fR ${OPENSHIFT_REPO_DIR}misc/public-files/* $PUBLIC_FILES_DIR
chmod 555 ${OPENSHIFT_REPO_DIR}php/sites/default
